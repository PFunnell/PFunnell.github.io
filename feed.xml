<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2025-04-14T23:42:03+00:00</updated><id>/feed.xml</id><title type="html">Build and Deploy Jekyll Site</title><entry><title type="html">Building a Semantic Knowledge Graph from ChatGPT Conversations in Obsidian</title><link href="/obsidian/ai/python/2025/04/14/obsidian-linker.html" rel="alternate" type="text/html" title="Building a Semantic Knowledge Graph from ChatGPT Conversations in Obsidian" /><published>2025-04-14T10:00:00+00:00</published><updated>2025-04-14T10:00:00+00:00</updated><id>/obsidian/ai/python/2025/04/14/obsidian-linker</id><content type="html" xml:base="/obsidian/ai/python/2025/04/14/obsidian-linker.html"><![CDATA[<p>Over the past year, I’ve had over 1,300 conversations with ChatGPT — covering everything from local government and AI ethics to neurodivergence, coding, and digital tools.</p>

<p>That’s a rich dataset — but without structure, it’s just a Markdown graveyard.</p>

<p>So I built something to fix that.</p>

<h2 id="-what-i-built">🛠 What I Built</h2>

<p>Two Python scripts:</p>

<ol>
  <li><strong><code class="language-plaintext highlighter-rouge">main.py</code></strong> — finds semantic similarity between markdown files and links them together with Obsidian-style <code class="language-plaintext highlighter-rouge">[[wikilinks]]</code>.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">tagger.py</code></strong> — assigns smart tags to each file based on similarity to a predefined list of thematic tags.</li>
</ol>

<p>The goal? Build a <strong>self-organising knowledge graph</strong> out of exported ChatGPT markdown files.</p>

<hr />

<h2 id="-how-it-works">💡 How It Works</h2>

<ul>
  <li>Uses <a href="https://www.sbert.net/">Sentence Transformers</a> to generate embeddings</li>
  <li>Caches embeddings for performance</li>
  <li>Calculates pairwise cosine similarity</li>
  <li>Adds Obsidian-style <code class="language-plaintext highlighter-rouge">[[links]]</code> to the bottom of each file</li>
  <li>Uses YAML frontmatter for tags (via <code class="language-plaintext highlighter-rouge">tagger.py</code>)</li>
  <li>Runs locally with GPU support (tested on RTX 4070 in a Lenovo Legion Slim 5)</li>
</ul>

<hr />

<h2 id="-heres-the-result">📸 Here’s the Result</h2>

<p><img src="/assets/images/metisem1.png" alt="Obsidian graph view" /></p>

<p>^ This is a visualisation of my Obsidian vault after running the script — showing clusters of related notes linked by meaning, not keywords.</p>

<hr />

<h2 id="️-example-usage">⚙️ Example Usage</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python main.py vault_path <span class="se">\</span>
  <span class="nt">--clusters</span> 40 <span class="se">\</span>
  <span class="nt">--similarity</span> 0.6 <span class="se">\</span>
  <span class="nt">--title-weight</span> 0.4 <span class="se">\</span>
  <span class="nt">--content-weight</span> 0.6 <span class="se">\</span>
  <span class="nt">--batch-size</span> 32 <span class="se">\</span>
  <span class="nt">--min-links</span> 1 <span class="se">\</span>
  <span class="nt">--max-links</span> 9 <span class="se">\</span>
  <span class="nt">--delete-links</span> <span class="se">\</span>
  <span class="nt">--apply-links</span> <span class="se">\</span>
  <span class="nt">--force-embeddings</span> <span class="se">\</span>
  <span class="nt">--model</span> gtr-x5-l
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python tagger.py vault_path <span class="se">\</span>
  <span class="nt">--tags-file</span> tags.txt <span class="se">\</span>
  <span class="nt">--apply-tags</span> <span class="se">\</span>
  <span class="nt">--force-embeddings</span>
</code></pre></div></div>

<hr />

<h2 id="-whats-next">🧪 What’s Next</h2>

<ul>
  <li>Visual overlays of cluster topics in the graph</li>
  <li>GPT-generated summaries or categories</li>
  <li>Time-aware linking (chronological progression of ideas)</li>
  <li>Interface it with Obsidian Canvas</li>
</ul>

<hr />

<p>I’m thinking of turning this into a packaged tool — maybe even a plugin. If that sounds useful, let me know.</p>

<p>→ <a href="#">View it on GitHub</a> <em>(coming soon)</em></p>

<hr />

<h2 id="-bonus-tags-i-use">🔖 Bonus: Tags I Use</h2>

<p>My <code class="language-plaintext highlighter-rouge">tags.txt</code> includes things like:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">ai_and_automation</code></li>
  <li><code class="language-plaintext highlighter-rouge">neurodivergence</code></li>
  <li><code class="language-plaintext highlighter-rouge">ethics_and_policy</code></li>
  <li><code class="language-plaintext highlighter-rouge">education</code></li>
  <li><code class="language-plaintext highlighter-rouge">arts_and_cognition</code></li>
  <li><code class="language-plaintext highlighter-rouge">system_design</code></li>
</ul>

<p>Each one maps to a description and is matched semantically — not by string matching — which feels like the future of note organisation.</p>

<hr />

<p>Let me know if you’re trying to tame a similar pile of markdown chaos.</p>]]></content><author><name></name></author><category term="obsidian" /><category term="ai" /><category term="python" /><summary type="html"><![CDATA[Over the past year, I’ve had over 1,300 conversations with ChatGPT — covering everything from local government and AI ethics to neurodivergence, coding, and digital tools.]]></summary></entry></feed>